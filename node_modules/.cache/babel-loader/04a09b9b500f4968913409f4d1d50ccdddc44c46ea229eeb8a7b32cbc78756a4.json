{"ast":null,"code":"import * as Yup from 'yup';\nconst ValidationRegisterSchema = Yup.object().shape({\n  username: Yup.string().required(\"Username is required !!\").matches(/^[a-zA-Z][a-zA-Z0-9]*$/, \"Username must start with a letter and can only contain letters and numbers, no special characters.\"),\n  ProfileUrl: Yup.string().url(\"Must be valid link !!\").notRequired(),\n  email: Yup.string().email(\"Invalid email fromat !!\").matches(/^[a-zA-Z0-9._%+-]+@(gmail\\.com)$/, 'Email must be a Gmail address').required(\"Email is required !!\"),\n  password: Yup.string().min(8, \"Password must be at least 8 characters !!\").matches(/[!@#$%^&*(),.?\":{}|<>]/, \"Password must contain at least one special character !!\").required(\"Password is required !!\"),\n  conPassword: Yup.string().oneOf([Yup.ref(\"password\")], 'Password must be match !!').required(\"Password is required !!\"),\n  checkbox: Yup.bool().oneOf([true], \"You must agree all the terms\"),\n  policyAgreement: Yup.bool().oneOf([true], \"You must agree to the Return Policy to register\"),\n  gender: Yup.string().required(\"Gender is required !!\")\n});\nexport default ValidationRegisterSchema;","map":{"version":3,"names":["Yup","ValidationRegisterSchema","object","shape","username","string","required","matches","ProfileUrl","url","notRequired","email","password","min","conPassword","oneOf","ref","checkbox","bool","policyAgreement","gender"],"sources":["C:/Users/arw93/Downloads/project3/client/src/validations/RegisterValidation.js"],"sourcesContent":["import * as Yup from 'yup';\n\nconst ValidationRegisterSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required !!\").matches(/^[a-zA-Z][a-zA-Z0-9]*$/,\"Username must start with a letter and can only contain letters and numbers, no special characters.\"),\n    ProfileUrl:Yup.string().url(\"Must be valid link !!\").notRequired(),\n    email:Yup.string().email(\"Invalid email fromat !!\").matches(/^[a-zA-Z0-9._%+-]+@(gmail\\.com)$/, 'Email must be a Gmail address').required(\"Email is required !!\"),\n    password: Yup.string().min(8, \"Password must be at least 8 characters !!\").matches(/[!@#$%^&*(),.?\":{}|<>]/,\"Password must contain at least one special character !!\").required(\"Password is required !!\"),\n    conPassword:Yup.string().oneOf([Yup.ref(\"password\")],'Password must be match !!').required(\"Password is required !!\"),\n    checkbox:Yup.bool().oneOf([true],\"You must agree all the terms\"),\n    policyAgreement: Yup.bool().oneOf([true], \"You must agree to the Return Policy to register\"),\n    gender: Yup.string().required(\"Gender is required !!\")\n})\n\n\nexport default ValidationRegisterSchema;"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,wBAAwB,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAChDC,QAAQ,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,OAAO,CAAC,wBAAwB,EAAC,oGAAoG,CAAC;EACjMC,UAAU,EAACR,GAAG,CAACK,MAAM,CAAC,CAAC,CAACI,GAAG,CAAC,uBAAuB,CAAC,CAACC,WAAW,CAAC,CAAC;EAClEC,KAAK,EAACX,GAAG,CAACK,MAAM,CAAC,CAAC,CAACM,KAAK,CAAC,yBAAyB,CAAC,CAACJ,OAAO,CAAC,kCAAkC,EAAE,+BAA+B,CAAC,CAACD,QAAQ,CAAC,sBAAsB,CAAC;EACjKM,QAAQ,EAAEZ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACQ,GAAG,CAAC,CAAC,EAAE,2CAA2C,CAAC,CAACN,OAAO,CAAC,wBAAwB,EAAC,yDAAyD,CAAC,CAACD,QAAQ,CAAC,yBAAyB,CAAC;EAC1MQ,WAAW,EAACd,GAAG,CAACK,MAAM,CAAC,CAAC,CAACU,KAAK,CAAC,CAACf,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC,CAAC,EAAC,2BAA2B,CAAC,CAACV,QAAQ,CAAC,yBAAyB,CAAC;EACrHW,QAAQ,EAACjB,GAAG,CAACkB,IAAI,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC,IAAI,CAAC,EAAC,8BAA8B,CAAC;EAChEI,eAAe,EAAEnB,GAAG,CAACkB,IAAI,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,iDAAiD,CAAC;EAC5FK,MAAM,EAAEpB,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB;AACzD,CAAC,CAAC;AAGF,eAAeL,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}