{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arw93\\\\Downloads\\\\project3\\\\client\\\\src\\\\copmonents\\\\pages\\\\Delivery.js\",\n  _s = $RefreshSig$();\n// Import component sections and React hooks\nimport Footer from '../sections/Footer'; // Footer component for consistent page footer\nimport Header from '../sections/Header'; // Header component for navigation\nimport { useState, useEffect } from 'react'; // React hooks for state management and side effects\nimport '../css/Delivery.css'; // CSS styles for delivery page animations, form styling, and layout\n\n// Main Delivery component for handling delivery information, form validation, and order tracking\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Delivery = () => {\n  _s();\n  // State management for delivery form, UI interactions, and progress tracking\n  const [isSubmitting, setIsSubmitting] = useState(false); // Tracks if form is being submitted (loading state)\n  const [showSuccess, setShowSuccess] = useState(false); // Controls visibility of success message and timeline\n  const [currentStep, setCurrentStep] = useState(1); // Tracks current step in delivery timeline (1-5)\n  const [progress, setProgress] = useState(0); // Tracks overall progress percentage (0-100%)\n\n  // State for form data with validation - stores all form field values\n  const [formData, setFormData] = useState({\n    area: '',\n    // User's area/locality (e.g., Al Khuwair)\n    city: '',\n    // User's city (e.g., Muscat)\n    street: '',\n    // Complete street address\n    number: '',\n    // House/apartment number with optional building info\n    zipCode: '',\n    // Postal/zip code (formatted to uppercase)\n    phone: '',\n    // Phone number with Omani formatting\n    preferredTime: 'morning',\n    // Default delivery time preference\n    message: '' // Optional delivery notes and instructions\n  });\n\n  // State for field validation errors - tracks validation messages for each field\n  const [errors, setErrors] = useState({}); // Object storing error messages keyed by field name\n  const [fieldFocus, setFieldFocus] = useState(''); // Tracks which form field currently has focus for visual styling\n\n  // Effect hook to simulate automatic progress through delivery timeline steps\n  // Simulate progress through timeline steps when success state becomes true\n  useEffect(() => {\n    // Only start timeline animation when form is successfully submitted\n    if (showSuccess) {\n      const steps = [1, 2, 3, 4]; // Steps to progress through (1-4, step 5 is final delivered state)\n      let currentIndex = 0; // Track current position in steps array\n\n      // Set up interval to automatically advance through timeline steps\n      const interval = setInterval(() => {\n        if (currentIndex < steps.length) {\n          setCurrentStep(steps[currentIndex]); // Update current step to show progress\n          setProgress((currentIndex + 1) * 25); // Update progress percentage (25% increment per step)\n          currentIndex++; // Move to next step in the sequence\n        } else {\n          clearInterval(interval); // Stop interval when all steps are completed\n        }\n      }, 1500); // Advance to next step every 1.5 seconds for smooth progression\n\n      // Cleanup function to clear interval when component unmounts or dependencies change\n      return () => clearInterval(interval);\n    }\n  }, [showSuccess]); // Dependency array - effect runs only when showSuccess state changes\n\n  // Comprehensive validation function for individual form fields\n  // Validation functions - checks field-specific rules and returns error messages\n  const validateField = (name, value) => {\n    let error = ''; // Initialize empty error message\n\n    // Switch statement handles different validation rules for each field type\n    switch (name) {\n      case 'area':\n        if (!value.trim()) error = 'Area is required'; // Check for empty value\n        else if (!/^[a-zA-Z\\s\\-']+$/.test(value)) error = 'Area should contain only letters and spaces'; // Alpha characters only\n        break;\n      case 'city':\n        if (!value.trim()) error = 'City is required'; // Check for empty value\n        else if (!/^[a-zA-Z\\s\\-']+$/.test(value)) error = 'City should contain only letters and spaces'; // Alpha characters only\n        break;\n      case 'street':\n        if (!value.trim()) error = 'Street address is required'; // Check for empty value\n        else if (value.length < 5) error = 'Street address is too short'; // Minimum length requirement\n        break;\n      case 'number':\n        if (!value.trim()) error = 'House number is required'; // Check for empty value\n        else if (!/^[0-9a-zA-Z\\-\\/]+$/.test(value)) error = 'Enter a valid house/apartment number'; // Alphanumeric with dashes/slashes\n        break;\n      case 'zipCode':\n        if (!value.trim()) error = 'Zip code is required'; // Check for empty value\n        else if (!/^[0-9a-zA-Z\\-\\s]+$/.test(value)) error = 'Enter a valid zip code'; // Alphanumeric with dashes and spaces\n        break;\n      case 'phone':\n        if (!value.trim()) error = 'Phone number is required'; // Check for empty value\n        else if (!/^[\\+]?[0-9\\s\\-\\(\\)]{8,}$/.test(value)) error = 'Enter a valid phone number'; // International phone format with min 8 digits\n        break;\n      default:\n        break;\n      // No validation for other fields (preferredTime, message)\n    }\n    return error; // Return the error message (empty string if validation passes)\n  };\n\n  // Generic input change handler with real-time error clearing\n  // Handle input changes with validation - updates form data and clears errors as user types\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // Extract field name and value from event\n\n    // Update form data state with new value while preserving other fields\n    setFormData(prev => ({\n      ...prev,\n      // Spread previous state to maintain other field values\n      [name]: value // Update the specific field that changed\n    }));\n\n    // Clear error when user starts typing in a field that previously had an error\n    if (errors[name]) {\n      const error = validateField(name, value); // Re-validate the field\n      setErrors(prev => ({\n        ...prev,\n        // Spread previous errors\n        [name]: error // Update error for this field (empty string if valid)\n      }));\n    }\n  };\n\n  // Focus event handler for visual feedback\n  // Handle field focus - updates state to track which field has focus for styling\n  const handleFocus = fieldName => {\n    setFieldFocus(fieldName); // Set the currently focused field name\n  };\n\n  // Blur event handler with validation triggering\n  // Handle field blur with validation - validates field when user leaves it\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target; // Extract field name and value\n    const error = validateField(name, value); // Validate the field value\n\n    // Update errors state with validation result\n    setErrors(prev => ({\n      ...prev,\n      // Spread previous errors\n      [name]: error // Set error message for this field\n    }));\n    setFieldFocus(''); // Clear focus state since field is no longer focused\n  };\n\n  // Specialized phone number formatter for Omani number patterns\n  // Format phone number as user types - applies Omani phone number formatting\n  const handlePhoneChange = e => {\n    let value = e.target.value.replace(/\\D/g, ''); // Remove all non-digit characters\n\n    // Format as XXX XXX XXX for Omani numbers after user enters sufficient digits\n    // Format as +968 XX XXX XXX for Omani numbers\n    if (value.length > 3) {\n      value = value.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3'); // Group digits: 912345678 -> 912 345 678\n    }\n\n    // Update form data with formatted phone number\n    setFormData(prev => ({\n      ...prev,\n      phone: value\n    }));\n  };\n\n  // Zip code formatter with auto-uppercase and character filtering\n  // Format zip code - converts to uppercase and removes invalid characters\n  const handleZipCodeChange = e => {\n    let value = e.target.value.toUpperCase().replace(/[^0-9A-Z]/g, ''); // Convert to uppercase, keep only alphanumeric\n\n    // Update form data with cleaned zip code\n    setFormData(prev => ({\n      ...prev,\n      zipCode: value\n    }));\n  };\n\n  // Comprehensive form validation before submission\n  // Validate entire form before submission - checks all required fields\n  const validateForm = () => {\n    const newErrors = {}; // Initialize empty errors object\n\n    // Loop through all form data fields (except optional ones)\n    Object.keys(formData).forEach(key => {\n      // Skip validation for optional fields (message) and pre-selected fields (preferredTime)\n      if (key !== 'message' && key !== 'preferredTime') {\n        const error = validateField(key, formData[key]); // Validate each required field\n        if (error) newErrors[key] = error; // Add to errors if validation fails\n      }\n    });\n    setErrors(newErrors); // Update errors state with all validation results\n    return Object.keys(newErrors).length === 0; // Return true if no errors (form is valid)\n  };\n\n  // Main form submission handler with validation and success flow\n  const handleConfirm = e => {\n    e.preventDefault(); // Prevent default form submission behavior (page reload)\n\n    // Validate form before submission - check all fields meet requirements\n    // Validate form before submission\n    if (!validateForm()) {\n      // Scroll to first error field for better user experience\n      // Scroll to first error\n      const firstErrorField = document.querySelector('.error-field'); // Find first field with error\n      if (firstErrorField) {\n        firstErrorField.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        }); // Smooth scroll to error\n      }\n      return; // Stop submission if validation fails\n    }\n    setIsSubmitting(true); // Set loading state to show processing indicator\n\n    // Simulate processing delay for better UX (API call simulation)\n    // Simulate processing delay\n    setTimeout(() => {\n      setIsSubmitting(false); // Clear loading state after processing\n      setShowSuccess(true); // Show success message and trigger timeline animation\n\n      // Show confirmation alert after success animation appears\n      // Show alert after animation\n      setTimeout(() => {\n        alert(\"Your order's on its way! 📦✨ We'll have it at your door soon.\"); // Success confirmation\n      }, 1000); // 1 second delay after success state to allow animation to show\n    }, 2000); // 2 second processing simulation\n  };\n\n  // Timeline steps configuration for delivery progress visualization\n  const timelineSteps = [{\n    step: 1,\n    // Step identifier\n    title: \"Order Confirmed\",\n    // User-friendly step title\n    description: \"We receive your order details\",\n    // Step explanation\n    icon: \"✓\",\n    // Visual icon representing the step\n    time: \"Today, 10:00 AM\",\n    // Estimated completion time\n    status: \"completed\" // Initial status - always completed after form submission\n  }, {\n    step: 2,\n    title: \"Processing\",\n    description: \"Preparing your appliance for delivery\",\n    icon: \"⚙️\",\n    time: \"Today, 10:30 AM\",\n    status: currentStep >= 2 ? \"completed\" : \"pending\" // Dynamic status based on timeline progress\n  }, {\n    step: 3,\n    title: \"Quality Check\",\n    description: \"Final inspection and packaging\",\n    icon: \"🔍\",\n    time: \"Today, 11:30 AM\",\n    status: currentStep >= 3 ? \"completed\" : \"pending\" // Updates automatically as timeline advances\n  }, {\n    step: 4,\n    title: \"On the Way\",\n    description: \"Out for delivery to your location\",\n    icon: \"🚚\",\n    time: \"Tomorrow, 9:00 AM\",\n    status: currentStep >= 4 ? \"completed\" : \"pending\"\n  }, {\n    step: 5,\n    title: \"Delivered\",\n    description: \"At your doorstep within 2 days\",\n    icon: \"🏠\",\n    time: \"Tomorrow, 2:00 PM\",\n    status: currentStep >= 5 ? \"completed\" : \"pending\" // Final step completion status\n  }];\n\n  // Component render method - returns JSX for delivery interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-contact\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delivery-animation-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delivery-truck-animation\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"truck\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"truck-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cab\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"window\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container-box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"package package-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"package package-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"package package-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wheel front-wheel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wheel back-wheel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"smoke\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"road\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"floating-packages\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"floating-package p1\",\n              children: \"\\uD83D\\uDCE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"floating-package p2\",\n              children: \"\\uD83D\\uDCE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"floating-package p3\",\n              children: \"\\uD83D\\uDCE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"floating-package p4\",\n              children: \"\\uD83D\\uDCE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: '#7B4F2C'\n            },\n            children: \"Delivery Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), \" \", showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-animation\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"success-text\",\n              children: \"Delivery Scheduled Successfully! \\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleConfirm,\n            noValidate: true,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"area\",\n                  className: \"form-label\",\n                  children: [\"Area \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 26\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"area\",\n                  className: `form-control ${errors.area ? 'error-field is-invalid' : ''} ${fieldFocus === 'area' ? 'focused' : ''}` // Dynamic classes for styling\n                  ,\n                  id: \"area\",\n                  placeholder: \"Enter your area (e.g., Al Khuwair)\" /* Helpful example placeholder */,\n                  value: formData.area,\n                  onChange: handleInputChange,\n                  onFocus: () => handleFocus('area') /* Set focus state for styling */,\n                  onBlur: handleBlur /* Trigger validation on field exit */,\n                  required: true /* HTML5 required attribute */\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this), errors.area && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.area\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 35\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"city\",\n                  className: \"form-label\",\n                  children: [\"City \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 26\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"city\",\n                  className: `form-control ${errors.city ? 'error-field is-invalid' : ''} ${fieldFocus === 'city' ? 'focused' : ''}` /* Conditional error/focus styling */,\n                  id: \"city\",\n                  placeholder: \"Enter your city (e.g., Muscat)\" /* Contextual placeholder */,\n                  value: formData.city,\n                  onChange: handleInputChange,\n                  onFocus: () => handleFocus('city'),\n                  onBlur: handleBlur,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this), errors.city && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 35\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"street\",\n                className: \"form-label\",\n                children: [\"Street Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 34\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                className: `form-control ${errors.street ? 'error-field is-invalid' : ''} ${fieldFocus === 'street' ? 'focused' : ''}`,\n                id: \"street\",\n                placeholder: \"Enter street name and area details\" /* Guidance for complete address */,\n                value: formData.street,\n                onChange: handleInputChange,\n                onFocus: () => handleFocus('street'),\n                onBlur: handleBlur,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), errors.street && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.street\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text text-muted\",\n                children: \"Please provide the complete street address for accurate delivery \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"number\",\n                  className: \"form-label\",\n                  children: [\"House/Apartment Number \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 44\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"number\",\n                  className: `form-control ${errors.number ? 'error-field is-invalid' : ''} ${fieldFocus === 'number' ? 'focused' : ''}`,\n                  id: \"number\",\n                  placeholder: \"e.g., 123, Bldg 45, Apt 6\" /* Flexible format examples */,\n                  value: formData.number,\n                  onChange: handleInputChange,\n                  onFocus: () => handleFocus('number'),\n                  onBlur: handleBlur,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this), errors.number && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"zipCode\",\n                  className: \"form-label\",\n                  children: [\"Zip/Postal Code \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 37\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"zipCode\",\n                  className: `form-control ${errors.zipCode ? 'error-field is-invalid' : ''} ${fieldFocus === 'zipCode' ? 'focused' : ''}`,\n                  id: \"zipCode\",\n                  placeholder: \"e.g., 113, PC 112\" /* Omani postal code examples */,\n                  value: formData.zipCode,\n                  onChange: handleZipCodeChange /* Specialized handler for formatting */,\n                  onFocus: () => handleFocus('zipCode'),\n                  onBlur: handleBlur,\n                  maxLength: \"10\" /* Character limit for zip codes */,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), errors.zipCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.zipCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                className: \"form-label\",\n                children: [\"Phone Number \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 32\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"phone\",\n                className: `form-control ${errors.phone ? 'error-field is-invalid' : ''} ${fieldFocus === 'phone' ? 'focused' : ''}`,\n                id: \"phone\",\n                placeholder: \"e.g., 9123 4567\" /* Omani phone number example */,\n                value: formData.phone,\n                onChange: handlePhoneChange /* Specialized handler for phone formatting */,\n                onFocus: () => handleFocus('phone'),\n                onBlur: handleBlur,\n                maxLength: \"15\" /* Accommodates formatted number length */,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text text-muted\",\n                children: \"We'll contact you on this number for delivery updates \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"preferredTime\",\n                className: \"form-label\",\n                children: \"Preferred Delivery Time \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"preferredTime\",\n                className: \"form-control\",\n                id: \"preferredTime\",\n                value: formData.preferredTime,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"morning\",\n                  children: \"\\uD83C\\uDF05 Morning (9 AM - 12 PM)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"afternoon\",\n                  children: \"\\u2600\\uFE0F Afternoon (12 PM - 5 PM)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"evening\",\n                  children: \"\\uD83C\\uDF19 Evening (5 PM - 8 PM)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text text-muted\",\n                children: \"We'll try our best to deliver during your preferred time \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\",\n                className: \"form-label\",\n                children: [\"Delivery Notes \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: \"(Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 34\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"message\",\n                className: \"form-control\",\n                id: \"message\",\n                rows: \"4\",\n                placeholder: \"Any special delivery instructions, gate codes, security information, or specific landmarks...\" /* Comprehensive examples */,\n                value: formData.message,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text text-muted\",\n                children: \"Help our delivery team locate you easily \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), isSubmitting && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Processing your delivery request...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-submit delivery-btn\",\n                disabled: isSubmitting /* Disable during processing to prevent duplicate submissions */,\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner-border spinner-border-sm me-2\",\n                    role: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 23\n                  }, this), \" \", \"Processing... \"]\n                }, void 0, true) : 'Confirm Delivery & Proceed' /* Default button text with clear action */\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text text-muted d-block mt-2\",\n                children: \"By confirming, you agree to our delivery terms and conditions \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advanced-timeline-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: '#7B4F2C',\n                  margin: 0\n                },\n                children: \"Delivery Timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-text\",\n                  children: [progress, \"% Complete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-fill\",\n                    style: {\n                      width: `${progress}%`\n                    } /* Dynamic width based on progress state */\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"advanced-timeline\",\n              children: timelineSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                /* Unique key for React rendering optimization */\n                className: `timeline-item ${step.status} ${currentStep === step.step ? 'current' : ''}` /* Dynamic classes for completed/pending/current states */,\n                style: {\n                  animationDelay: `${index * 0.2}s`\n                } /* Staggered animation timing */,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timeline-connector\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"connector-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"step-marker\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"step-icon\",\n                      children: step.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"status-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timeline-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"timeline-header-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"step-title\",\n                      children: step.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"step-time\",\n                      children: step.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"step-description\",\n                    children: step.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, this), \" \", currentStep === step.step && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"current-step-info\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"estimated-time\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"time-icon\",\n                        children: \"\\u23F1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 29\n                      }, this), \" \", \"Estimated: \", index === timelineSteps.length - 1 ? '2 hours' : '1 hour', \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 25\n                  }, this), currentStep === step.step && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"step-progress\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-progress-bar\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-progress-fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 29\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, step.step, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"delivery-estimate\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"estimate-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"estimate-icon\",\n                    children: \"\\uD83D\\uDCC5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"estimate-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Estimated Delivery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Within 2 business days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 23\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the component for use in other parts of the application\n_s(Delivery, \"KanBBUCspyNItJUFf8OxjFxa/m8=\");\n_c = Delivery;\nexport default Delivery;\nvar _c;\n$RefreshReg$(_c, \"Delivery\");","map":{"version":3,"names":["Footer","Header","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Delivery","_s","isSubmitting","setIsSubmitting","showSuccess","setShowSuccess","currentStep","setCurrentStep","progress","setProgress","formData","setFormData","area","city","street","number","zipCode","phone","preferredTime","message","errors","setErrors","fieldFocus","setFieldFocus","steps","currentIndex","interval","setInterval","length","clearInterval","validateField","name","value","error","trim","test","handleInputChange","e","target","prev","handleFocus","fieldName","handleBlur","handlePhoneChange","replace","handleZipCodeChange","toUpperCase","validateForm","newErrors","Object","keys","forEach","key","handleConfirm","preventDefault","firstErrorField","document","querySelector","scrollIntoView","behavior","block","setTimeout","alert","timelineSteps","step","title","description","icon","time","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","noValidate","htmlFor","type","id","placeholder","onChange","onFocus","onBlur","required","maxLength","rows","disabled","role","margin","width","map","index","animationDelay","_c","$RefreshReg$"],"sources":["C:/Users/arw93/Downloads/project3/client/src/copmonents/pages/Delivery.js"],"sourcesContent":["// Import component sections and React hooks\r\nimport Footer from '../sections/Footer'; // Footer component for consistent page footer\r\nimport Header from '../sections/Header'; // Header component for navigation\r\nimport { useState, useEffect } from 'react'; // React hooks for state management and side effects\r\nimport '../css/Delivery.css'; // CSS styles for delivery page animations, form styling, and layout\r\n\r\n// Main Delivery component for handling delivery information, form validation, and order tracking\r\nconst Delivery = () => {\r\n  // State management for delivery form, UI interactions, and progress tracking\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // Tracks if form is being submitted (loading state)\r\n  const [showSuccess, setShowSuccess] = useState(false); // Controls visibility of success message and timeline\r\n  const [currentStep, setCurrentStep] = useState(1); // Tracks current step in delivery timeline (1-5)\r\n  const [progress, setProgress] = useState(0); // Tracks overall progress percentage (0-100%)\r\n  \r\n  // State for form data with validation - stores all form field values\r\n  const [formData, setFormData] = useState({\r\n    area: '', // User's area/locality (e.g., Al Khuwair)\r\n    city: '', // User's city (e.g., Muscat)\r\n    street: '', // Complete street address\r\n    number: '', // House/apartment number with optional building info\r\n    zipCode: '', // Postal/zip code (formatted to uppercase)\r\n    phone: '', // Phone number with Omani formatting\r\n    preferredTime: 'morning', // Default delivery time preference\r\n    message: '' // Optional delivery notes and instructions\r\n  });\r\n\r\n  // State for field validation errors - tracks validation messages for each field\r\n  const [errors, setErrors] = useState({}); // Object storing error messages keyed by field name\r\n  const [fieldFocus, setFieldFocus] = useState(''); // Tracks which form field currently has focus for visual styling\r\n\r\n  // Effect hook to simulate automatic progress through delivery timeline steps\r\n  // Simulate progress through timeline steps when success state becomes true\r\n  useEffect(() => {\r\n    // Only start timeline animation when form is successfully submitted\r\n    if (showSuccess) {\r\n      const steps = [1, 2, 3, 4]; // Steps to progress through (1-4, step 5 is final delivered state)\r\n      let currentIndex = 0; // Track current position in steps array\r\n\r\n      // Set up interval to automatically advance through timeline steps\r\n      const interval = setInterval(() => {\r\n        if (currentIndex < steps.length) {\r\n          setCurrentStep(steps[currentIndex]); // Update current step to show progress\r\n          setProgress((currentIndex + 1) * 25); // Update progress percentage (25% increment per step)\r\n          currentIndex++; // Move to next step in the sequence\r\n        } else {\r\n          clearInterval(interval); // Stop interval when all steps are completed\r\n        }\r\n      }, 1500); // Advance to next step every 1.5 seconds for smooth progression\r\n\r\n      // Cleanup function to clear interval when component unmounts or dependencies change\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [showSuccess]); // Dependency array - effect runs only when showSuccess state changes\r\n\r\n  // Comprehensive validation function for individual form fields\r\n  // Validation functions - checks field-specific rules and returns error messages\r\n  const validateField = (name, value) => {\r\n    let error = ''; // Initialize empty error message\r\n    \r\n    // Switch statement handles different validation rules for each field type\r\n    switch (name) {\r\n      case 'area':\r\n        if (!value.trim()) error = 'Area is required'; // Check for empty value\r\n        else if (!/^[a-zA-Z\\s\\-']+$/.test(value)) error = 'Area should contain only letters and spaces'; // Alpha characters only\r\n        break;\r\n        \r\n      case 'city':\r\n        if (!value.trim()) error = 'City is required'; // Check for empty value\r\n        else if (!/^[a-zA-Z\\s\\-']+$/.test(value)) error = 'City should contain only letters and spaces'; // Alpha characters only\r\n        break;\r\n        \r\n      case 'street':\r\n        if (!value.trim()) error = 'Street address is required'; // Check for empty value\r\n        else if (value.length < 5) error = 'Street address is too short'; // Minimum length requirement\r\n        break;\r\n        \r\n      case 'number':\r\n        if (!value.trim()) error = 'House number is required'; // Check for empty value\r\n        else if (!/^[0-9a-zA-Z\\-\\/]+$/.test(value)) error = 'Enter a valid house/apartment number'; // Alphanumeric with dashes/slashes\r\n        break;\r\n        \r\n      case 'zipCode':\r\n        if (!value.trim()) error = 'Zip code is required'; // Check for empty value\r\n        else if (!/^[0-9a-zA-Z\\-\\s]+$/.test(value)) error = 'Enter a valid zip code'; // Alphanumeric with dashes and spaces\r\n        break;\r\n        \r\n      case 'phone':\r\n        if (!value.trim()) error = 'Phone number is required'; // Check for empty value\r\n        else if (!/^[\\+]?[0-9\\s\\-\\(\\)]{8,}$/.test(value)) error = 'Enter a valid phone number'; // International phone format with min 8 digits\r\n        break;\r\n        \r\n      default:\r\n        break; // No validation for other fields (preferredTime, message)\r\n    }\r\n    \r\n    return error; // Return the error message (empty string if validation passes)\r\n  };\r\n\r\n  // Generic input change handler with real-time error clearing\r\n  // Handle input changes with validation - updates form data and clears errors as user types\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target; // Extract field name and value from event\r\n    \r\n    // Update form data state with new value while preserving other fields\r\n    setFormData(prev => ({\r\n      ...prev, // Spread previous state to maintain other field values\r\n      [name]: value // Update the specific field that changed\r\n    }));\r\n\r\n    // Clear error when user starts typing in a field that previously had an error\r\n    if (errors[name]) {\r\n      const error = validateField(name, value); // Re-validate the field\r\n      setErrors(prev => ({\r\n        ...prev, // Spread previous errors\r\n        [name]: error // Update error for this field (empty string if valid)\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Focus event handler for visual feedback\r\n  // Handle field focus - updates state to track which field has focus for styling\r\n  const handleFocus = (fieldName) => {\r\n    setFieldFocus(fieldName); // Set the currently focused field name\r\n  };\r\n\r\n  // Blur event handler with validation triggering\r\n  // Handle field blur with validation - validates field when user leaves it\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target; // Extract field name and value\r\n    const error = validateField(name, value); // Validate the field value\r\n    \r\n    // Update errors state with validation result\r\n    setErrors(prev => ({\r\n      ...prev, // Spread previous errors\r\n      [name]: error // Set error message for this field\r\n    }));\r\n    \r\n    setFieldFocus(''); // Clear focus state since field is no longer focused\r\n  };\r\n\r\n  // Specialized phone number formatter for Omani number patterns\r\n  // Format phone number as user types - applies Omani phone number formatting\r\n  const handlePhoneChange = (e) => {\r\n    let value = e.target.value.replace(/\\D/g, ''); // Remove all non-digit characters\r\n    \r\n    // Format as XXX XXX XXX for Omani numbers after user enters sufficient digits\r\n    // Format as +968 XX XXX XXX for Omani numbers\r\n    if (value.length > 3) {\r\n      value = value.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3'); // Group digits: 912345678 -> 912 345 678\r\n    }\r\n    \r\n    // Update form data with formatted phone number\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      phone: value\r\n    }));\r\n  };\r\n\r\n  // Zip code formatter with auto-uppercase and character filtering\r\n  // Format zip code - converts to uppercase and removes invalid characters\r\n  const handleZipCodeChange = (e) => {\r\n    let value = e.target.value.toUpperCase().replace(/[^0-9A-Z]/g, ''); // Convert to uppercase, keep only alphanumeric\r\n    \r\n    // Update form data with cleaned zip code\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      zipCode: value\r\n    }));\r\n  };\r\n\r\n  // Comprehensive form validation before submission\r\n  // Validate entire form before submission - checks all required fields\r\n  const validateForm = () => {\r\n    const newErrors = {}; // Initialize empty errors object\r\n    \r\n    // Loop through all form data fields (except optional ones)\r\n    Object.keys(formData).forEach(key => {\r\n      // Skip validation for optional fields (message) and pre-selected fields (preferredTime)\r\n      if (key !== 'message' && key !== 'preferredTime') {\r\n        const error = validateField(key, formData[key]); // Validate each required field\r\n        if (error) newErrors[key] = error; // Add to errors if validation fails\r\n      }\r\n    });\r\n    \r\n    setErrors(newErrors); // Update errors state with all validation results\r\n    return Object.keys(newErrors).length === 0; // Return true if no errors (form is valid)\r\n  };\r\n\r\n  // Main form submission handler with validation and success flow\r\n  const handleConfirm = (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior (page reload)\r\n    \r\n    // Validate form before submission - check all fields meet requirements\r\n    // Validate form before submission\r\n    if (!validateForm()) {\r\n      // Scroll to first error field for better user experience\r\n      // Scroll to first error\r\n      const firstErrorField = document.querySelector('.error-field'); // Find first field with error\r\n      if (firstErrorField) {\r\n        firstErrorField.scrollIntoView({ behavior: 'smooth', block: 'center' }); // Smooth scroll to error\r\n      }\r\n      return; // Stop submission if validation fails\r\n    }\r\n    \r\n    setIsSubmitting(true); // Set loading state to show processing indicator\r\n   \r\n    // Simulate processing delay for better UX (API call simulation)\r\n    // Simulate processing delay\r\n    setTimeout(() => {\r\n      setIsSubmitting(false); // Clear loading state after processing\r\n      setShowSuccess(true); // Show success message and trigger timeline animation\r\n     \r\n      // Show confirmation alert after success animation appears\r\n      // Show alert after animation\r\n      setTimeout(() => {\r\n        alert(\"Your order's on its way! 📦✨ We'll have it at your door soon.\"); // Success confirmation\r\n      }, 1000); // 1 second delay after success state to allow animation to show\r\n    }, 2000); // 2 second processing simulation\r\n  };\r\n\r\n  // Timeline steps configuration for delivery progress visualization\r\n  const timelineSteps = [\r\n    {\r\n      step: 1, // Step identifier\r\n      title: \"Order Confirmed\", // User-friendly step title\r\n      description: \"We receive your order details\", // Step explanation\r\n      icon: \"✓\", // Visual icon representing the step\r\n      time: \"Today, 10:00 AM\", // Estimated completion time\r\n      status: \"completed\" // Initial status - always completed after form submission\r\n    },\r\n    {\r\n      step: 2,\r\n      title: \"Processing\",\r\n      description: \"Preparing your appliance for delivery\",\r\n      icon: \"⚙️\",\r\n      time: \"Today, 10:30 AM\",\r\n      status: currentStep >= 2 ? \"completed\" : \"pending\" // Dynamic status based on timeline progress\r\n    },\r\n    {\r\n      step: 3,\r\n      title: \"Quality Check\",\r\n      description: \"Final inspection and packaging\",\r\n      icon: \"🔍\",\r\n      time: \"Today, 11:30 AM\",\r\n      status: currentStep >= 3 ? \"completed\" : \"pending\" // Updates automatically as timeline advances\r\n    },\r\n    {\r\n      step: 4,\r\n      title: \"On the Way\",\r\n      description: \"Out for delivery to your location\",\r\n      icon: \"🚚\",\r\n      time: \"Tomorrow, 9:00 AM\",\r\n      status: currentStep >= 4 ? \"completed\" : \"pending\"\r\n    },\r\n    {\r\n      step: 5,\r\n      title: \"Delivered\",\r\n      description: \"At your doorstep within 2 days\",\r\n      icon: \"🏠\",\r\n      time: \"Tomorrow, 2:00 PM\",\r\n      status: currentStep >= 5 ? \"completed\" : \"pending\" // Final step completion status\r\n    }\r\n  ];\r\n\r\n  // Component render method - returns JSX for delivery interface\r\n  return (\r\n    <div className=\"main-contact\">\r\n      <Header /> {/* Render header navigation component with menu and logo */}\r\n      \r\n      <div className=\"container contact-container\">\r\n        <div className=\"contact-content\">\r\n          {/* Animated delivery visualization section */}\r\n          <div className=\"delivery-animation-section\">\r\n            {/* Delivery Truck Animation - visual element showing moving delivery truck */}\r\n            <div className=\"delivery-truck-animation\">\r\n              <div className=\"truck\">\r\n                <div className=\"truck-body\">\r\n                  <div className=\"cab\">\r\n                    <div className=\"window\"></div> {/* Truck driver cabin window */}\r\n                  </div>\r\n                  <div className=\"container-box\">\r\n                    <div className=\"package package-1\"></div> {/* Animated package with bounce effect */}\r\n                    <div className=\"package package-2\"></div> {/* Animated package with different color */}\r\n                    <div className=\"package package-3\"></div> {/* Animated package with staggered timing */}\r\n                  </div>\r\n                </div>\r\n                <div className=\"wheel front-wheel\"></div> {/* Rotating front wheel animation */}\r\n                <div className=\"wheel back-wheel\"></div> {/* Rotating back wheel animation */}\r\n                <div className=\"smoke\"></div> {/* Animated exhaust smoke effect */}\r\n              </div>\r\n              <div className=\"road\"></div> {/* Road element for truck to drive along */}\r\n            </div>\r\n\r\n            {/* Floating Packages Animation - decorative floating package emojis */}\r\n            <div className=\"floating-packages\">\r\n              <div className=\"floating-package p1\">📦</div> {/* Floating package with emoji - position 1 */}\r\n              <div className=\"floating-package p2\">📦</div> {/* Floating package with emoji - position 2 */}\r\n              <div className=\"floating-package p3\">📦</div> {/* Floating package with emoji - position 3 */}\r\n              <div className=\"floating-package p4\">📦</div> {/* Floating package with emoji - position 4 */}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main delivery form section */}\r\n          <div className=\"contact-form\">\r\n            <h2 style={{ color: '#7B4F2C' }}>Delivery Information</h2> {/* Page heading with brand color consistency */}\r\n           \r\n            {/* Conditional rendering - success message appears after form submission */}\r\n            {/* Success Animation */}\r\n            {showSuccess && (\r\n              <div className=\"success-animation\">\r\n                <p className=\"success-text\">Delivery Scheduled Successfully! 🎉</p> {/* Success message with celebration emoji */}\r\n              </div>\r\n            )}\r\n\r\n            {/* Delivery information form with enhanced validation and UX */}\r\n            <form onSubmit={handleConfirm} noValidate> {/* noValidate prevents browser default validation */}\r\n              {/* Area and City inputs in responsive grid layout */}\r\n              {/* Area and City */}\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"area\" className=\"form-label\">\r\n                    Area <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                  </label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"area\" \r\n                    className={`form-control ${errors.area ? 'error-field is-invalid' : ''} ${fieldFocus === 'area' ? 'focused' : ''}`} // Dynamic classes for styling\r\n                    id=\"area\" \r\n                    placeholder=\"Enter your area (e.g., Al Khuwair)\" /* Helpful example placeholder */\r\n                    value={formData.area}\r\n                    onChange={handleInputChange}\r\n                    onFocus={() => handleFocus('area')} /* Set focus state for styling */\r\n                    onBlur={handleBlur} /* Trigger validation on field exit */\r\n                    required /* HTML5 required attribute */\r\n                  />\r\n                  {errors.area && <div className=\"invalid-feedback\">{errors.area}</div>} {/* Validation error message */}\r\n                </div>\r\n                \r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"city\" className=\"form-label\">\r\n                    City <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                  </label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"city\" \r\n                    className={`form-control ${errors.city ? 'error-field is-invalid' : ''} ${fieldFocus === 'city' ? 'focused' : ''}`} /* Conditional error/focus styling */\r\n                    id=\"city\" \r\n                    placeholder=\"Enter your city (e.g., Muscat)\" /* Contextual placeholder */\r\n                    value={formData.city}\r\n                    onChange={handleInputChange}\r\n                    onFocus={() => handleFocus('city')}\r\n                    onBlur={handleBlur}\r\n                    required \r\n                  />\r\n                  {errors.city && <div className=\"invalid-feedback\">{errors.city}</div>} {/* Field-specific error display */}\r\n                </div>\r\n              </div>\r\n             \r\n              {/* Street Address input - full width for complete address entry */}\r\n              {/* Street Address */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"street\" className=\"form-label\">\r\n                  Street Address <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                </label>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"street\" \r\n                  className={`form-control ${errors.street ? 'error-field is-invalid' : ''} ${fieldFocus === 'street' ? 'focused' : ''}`}\r\n                  id=\"street\" \r\n                  placeholder=\"Enter street name and area details\" /* Guidance for complete address */\r\n                  value={formData.street}\r\n                  onChange={handleInputChange}\r\n                  onFocus={() => handleFocus('street')}\r\n                  onBlur={handleBlur}\r\n                  required \r\n                />\r\n                {errors.street && <div className=\"invalid-feedback\">{errors.street}</div>}\r\n                <small className=\"form-text text-muted\">\r\n                  Please provide the complete street address for accurate delivery {/* Helper text */}\r\n                </small>\r\n              </div>\r\n             \r\n              {/* House Number and Zip Code in responsive side-by-side layout */}\r\n              {/* House Number and Zip Code */}\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"number\" className=\"form-label\">\r\n                    House/Apartment Number <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                  </label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"number\" \r\n                    className={`form-control ${errors.number ? 'error-field is-invalid' : ''} ${fieldFocus === 'number' ? 'focused' : ''}`}\r\n                    id=\"number\" \r\n                    placeholder=\"e.g., 123, Bldg 45, Apt 6\" /* Flexible format examples */\r\n                    value={formData.number}\r\n                    onChange={handleInputChange}\r\n                    onFocus={() => handleFocus('number')}\r\n                    onBlur={handleBlur}\r\n                    required \r\n                  />\r\n                  {errors.number && <div className=\"invalid-feedback\">{errors.number}</div>}\r\n                </div>\r\n                \r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"zipCode\" className=\"form-label\">\r\n                    Zip/Postal Code <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                  </label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"zipCode\" \r\n                    className={`form-control ${errors.zipCode ? 'error-field is-invalid' : ''} ${fieldFocus === 'zipCode' ? 'focused' : ''}`}\r\n                    id=\"zipCode\" \r\n                    placeholder=\"e.g., 113, PC 112\" /* Omani postal code examples */\r\n                    value={formData.zipCode}\r\n                    onChange={handleZipCodeChange} /* Specialized handler for formatting */\r\n                    onFocus={() => handleFocus('zipCode')}\r\n                    onBlur={handleBlur}\r\n                    maxLength=\"10\" /* Character limit for zip codes */\r\n                    required \r\n                  />\r\n                  {errors.zipCode && <div className=\"invalid-feedback\">{errors.zipCode}</div>}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Phone Number with Omani formatting */}\r\n              {/* Phone Number */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\" className=\"form-label\">\r\n                  Phone Number <span className=\"text-danger\">*</span> {/* Required field indicator */}\r\n                </label>\r\n                <input \r\n                  type=\"tel\" \r\n                  name=\"phone\" \r\n                  className={`form-control ${errors.phone ? 'error-field is-invalid' : ''} ${fieldFocus === 'phone' ? 'focused' : ''}`}\r\n                  id=\"phone\" \r\n                  placeholder=\"e.g., 9123 4567\" /* Omani phone number example */\r\n                  value={formData.phone}\r\n                  onChange={handlePhoneChange} /* Specialized handler for phone formatting */\r\n                  onFocus={() => handleFocus('phone')}\r\n                  onBlur={handleBlur}\r\n                  maxLength=\"15\" /* Accommodates formatted number length */\r\n                  required \r\n                />\r\n                {errors.phone && <div className=\"invalid-feedback\">{errors.phone}</div>}\r\n                <small className=\"form-text text-muted\">\r\n                  We'll contact you on this number for delivery updates {/* Purpose explanation */}\r\n                </small>\r\n              </div>\r\n\r\n              {/* Preferred Delivery Time selection with emoji-enhanced options */}\r\n              {/* Preferred Delivery Time */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"preferredTime\" className=\"form-label\">\r\n                  Preferred Delivery Time {/* Optional field - no asterisk */}\r\n                </label>\r\n                <select \r\n                  name=\"preferredTime\" \r\n                  className=\"form-control\"\r\n                  id=\"preferredTime\"\r\n                  value={formData.preferredTime}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"morning\">🌅 Morning (9 AM - 12 PM)</option> {/* Time slot with morning emoji */}\r\n                  <option value=\"afternoon\">☀️ Afternoon (12 PM - 5 PM)</option> {/* Time slot with sun emoji */}\r\n                  <option value=\"evening\">🌙 Evening (5 PM - 8 PM)</option> {/* Time slot with moon emoji */}\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  We'll try our best to deliver during your preferred time {/* Manage expectations */}\r\n                </small>\r\n              </div>\r\n\r\n              {/* Optional delivery notes for special instructions */}\r\n              {/* Delivery Notes */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"message\" className=\"form-label\">\r\n                  Delivery Notes <small className=\"text-muted\">(Optional)</small> {/* Clearly marked optional */}\r\n                </label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  className=\"form-control\"\r\n                  id=\"message\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Any special delivery instructions, gate codes, security information, or specific landmarks...\" /* Comprehensive examples */\r\n                  value={formData.message}\r\n                  onChange={handleInputChange}\r\n                ></textarea>\r\n                <small className=\"form-text text-muted\">\r\n                  Help our delivery team locate you easily {/* Practical guidance */}\r\n                </small>\r\n              </div>\r\n\r\n              {/* Conditional loading animation during form processing */}\r\n              {/* Loading Animation */}\r\n              {isSubmitting && (\r\n                <div className=\"loading-animation\">\r\n                  <div className=\"loading-spinner\"></div> {/* Animated spinner visual */}\r\n                  <p>Processing your delivery request...</p> {/* Loading state message */}\r\n                </div>\r\n              )}\r\n\r\n              {/* Form submission button with dynamic states */}\r\n              {/* Submit Button */}\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-submit delivery-btn\"\r\n                  disabled={isSubmitting} /* Disable during processing to prevent duplicate submissions */\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span> {/* Bootstrap spinner */}\r\n                      Processing... {/* Loading state button text */}\r\n                    </>\r\n                  ) : (\r\n                    'Confirm Delivery & Proceed' /* Default button text with clear action */\r\n                  )}\r\n                </button>\r\n                <small className=\"form-text text-muted d-block mt-2\">\r\n                  By confirming, you agree to our delivery terms and conditions {/* Legal disclaimer */}\r\n                </small>\r\n              </div>\r\n            </form>\r\n\r\n            {/* Advanced delivery timeline section - shows after successful submission */}\r\n            {/* Advanced Delivery Timeline */}\r\n            <div className=\"advanced-timeline-section\">\r\n              {/* Timeline header with progress indicator */}\r\n              <div className=\"timeline-header\">\r\n                <h4 style={{ color: '#7B4F2C', margin: 0 }}>Delivery Timeline</h4> {/* Timeline title with brand color */}\r\n                <div className=\"progress-indicator\">\r\n                  <span className=\"progress-text\">{progress}% Complete</span> {/* Progress percentage display */}\r\n                  <div className=\"progress-bar\">\r\n                    <div \r\n                      className=\"progress-fill\" \r\n                      style={{ width: `${progress}%` }} /* Dynamic width based on progress state */\r\n                    ></div> {/* Animated progress bar fill */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Timeline steps container with staggered animations */}\r\n              <div className=\"advanced-timeline\">\r\n                {/* Map through timeline steps to render each step with dynamic status */}\r\n                {timelineSteps.map((step, index) => (\r\n                  <div \r\n                    key={step.step} /* Unique key for React rendering optimization */\r\n                    className={`timeline-item ${step.status} ${\r\n                      currentStep === step.step ? 'current' : ''\r\n                    }`} /* Dynamic classes for completed/pending/current states */\r\n                    style={{ animationDelay: `${index * 0.2}s` }} /* Staggered animation timing */\r\n                  >\r\n                    {/* Timeline visual connector and step marker */}\r\n                    <div className=\"timeline-connector\">\r\n                      <div className=\"connector-line\"></div> {/* Vertical line connecting steps */}\r\n                      <div className=\"step-marker\">\r\n                        <span className=\"step-icon\">{step.icon}</span> {/* Step-specific icon */}\r\n                        <div className=\"status-dot\"></div> {/* Animated status indicator */}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Timeline step content area */}\r\n                    <div className=\"timeline-content\">\r\n                      <div className=\"timeline-header-content\">\r\n                        <h6 className=\"step-title\">{step.title}</h6> {/* Step title */}\r\n                        <span className=\"step-time\">{step.time}</span> {/* Estimated completion time */}\r\n                      </div>\r\n                      <p className=\"step-description\">{step.description}</p> {/* Step description */}\r\n                      \r\n                      {/* Conditional rendering - shows additional info for current active step */}\r\n                      {/* Additional info for current step */}\r\n                      {currentStep === step.step && (\r\n                        <div className=\"current-step-info\">\r\n                          <div className=\"estimated-time\">\r\n                            <span className=\"time-icon\">⏱️</span> {/* Time estimation icon */}\r\n                            Estimated: {index === timelineSteps.length - 1 ? '2 hours' : '1 hour'} {/* Dynamic time estimate */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Conditional rendering - shows progress animation for current active step */}\r\n                      {/* Progress animation for current step */}\r\n                      {currentStep === step.step && (\r\n                        <div className=\"step-progress\">\r\n                          <div className=\"step-progress-bar\">\r\n                            <div className=\"step-progress-fill\"></div> {/* Animated progress within current step */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Timeline controls and delivery estimate information */}\r\n              {/* Timeline Controls */}\r\n              <div className=\"timeline-controls\">\r\n                <div className=\"delivery-estimate\">\r\n                  <div className=\"estimate-card\">\r\n                    <div className=\"estimate-icon\">📅</div> {/* Calendar icon for delivery estimate */}\r\n                    <div className=\"estimate-info\">\r\n                      <strong>Estimated Delivery</strong> {/* Estimate title */}\r\n                      <span>Within 2 business days</span> {/* Delivery timeframe promise */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Additional timeline controls can be added here in the future */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer /> {/* Render footer component with links and information */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the component for use in other parts of the application\r\nexport default Delivery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}